# Generated by Django 5.2.5 on 2025-08-13 16:01

import django.db.models.deletion
import listings.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('listings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PropertyCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=64, unique=True)),
                ('title', models.CharField(max_length=64)),
            ],
        ),
        migrations.RemoveField(
            model_name='property',
            name='amenities',
        ),
        migrations.RemoveField(
            model_name='property',
            name='features',
        ),
        migrations.RemoveField(
            model_name='property',
            name='city',
        ),
        migrations.RemoveField(
            model_name='property',
            name='district',
        ),
        migrations.RemoveField(
            model_name='property',
            name='property_type',
        ),
        migrations.RemoveField(
            model_name='city',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='district',
            name='slug',
        ),
        migrations.AlterField(
            model_name='district',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('company', models.CharField(blank=True, max_length=128)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('bio', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='TRY', max_length=8)),
                ('is_negotiable', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('active', 'Active'), ('sold', 'Sold'), ('rented', 'Rented'), ('archived', 'Archived')], db_index=True, default='draft', max_length=16)),
                ('address', models.CharField(blank=True, max_length=512)),
                ('area_m2', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('rooms', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bathrooms', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('floor', models.CharField(blank=True, max_length=32)),
                ('has_elevator', models.BooleanField(default=False)),
                ('has_parking', models.BooleanField(default=False)),
                ('has_balcony', models.BooleanField(default=False)),
                ('heating_type', models.CharField(blank=True, max_length=64)),
                ('view_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listings', to='listings.agentprofile')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='listings.city')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='listings.district')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=32)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(db_index=True, default=False)),
                ('responded', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_inquiries', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiries', to='listings.listing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='listings.listing')),
            ],
            options={
                'unique_together': {('user', 'listing')},
            },
        ),
        migrations.CreateModel(
            name='ListingImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to=listings.models.listing_image_upload_to)),
                ('alt', models.CharField(blank=True, max_length=255)),
                ('order', models.PositiveSmallIntegerField(db_index=True, default=0)),
                ('is_cover', models.BooleanField(default=False)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='listings.listing')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neighborhoods', to='listings.district')),
            ],
            options={
                'unique_together': {('district', 'name')},
            },
        ),
        migrations.AddField(
            model_name='listing',
            name='neighborhood',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='listings.neighborhood'),
        ),
        migrations.AddField(
            model_name='listing',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='listings.propertycategory'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='TRY', max_length=8)),
                ('provider', models.CharField(max_length=64)),
                ('provider_reference', models.CharField(blank=True, max_length=256)),
                ('success', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='Amenity',
        ),
        migrations.DeleteModel(
            name='Feature',
        ),
        migrations.DeleteModel(
            name='Property',
        ),
        migrations.DeleteModel(
            name='PropertyType',
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['status', 'price'], name='listings_li_status_7347de_idx'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['city', 'district'], name='listings_li_city_id_6d4ed7_idx'),
        ),
    ]
